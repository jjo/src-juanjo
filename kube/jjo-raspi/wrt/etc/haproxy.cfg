# Example configuration file for HAProxy 1.3, refer to the url below for
# a full documentation and examples for configuration:
# http://haproxy.1wt.eu/download/1.3/doc/configuration.txt


# Global parameters
global

	# Log events to a remote syslog server at given address using the
	# specified facility and verbosity level. Multiple log options 
	# are allowed.
	#log 10.0.0.1 daemon info
        log /dev/log local0 info alert
        log /dev/log local1 notice alert

	# Specifiy the maximum number of allowed connections.
	maxconn 32000

	# Raise the ulimit for the maximum allowed number of open socket
	# descriptors per process. This is usually at least twice the
	# number of allowed connections (maxconn * 2 + nb_servers + 1) .
	ulimit-n 65535

	# Drop privileges (setuid, setgid), default is "root" on OpenWrt.
	uid 0
	gid 0

	# Perform chroot into the specified directory.
	#chroot /var/run/haproxy/

	# Daemonize on startup
	daemon

	nosplice
	# Enable debugging
	#debug

	# Spawn given number of processes and distribute load among them,
	# used for multi-core environments or to circumvent per-process
	# limits like number of open file descriptors. Default is 1.
	#nbproc 2


# Example SMTP proxy listener
listen kube-api
	# Disable this instance without commenting out the section.
	enabled
        log global

	# Bind to port 26 and 588 on localhost
	bind :6443

	# This is a TCP proxy
	mode tcp

        timeout connect 1000
        timeout check 2000
        timeout client 60000
	balance roundrobin

        #option tcp-check

	option httpchk GET /healthz HTTP/1.0
        #http-check expect rstring ^ok
	http-check expect status 200

	#option ssl-hello-chk

	server server01 192.168.185.32:6443 check check-ssl verify none
	server server02 192.168.185.33:6443 check check-ssl verify none
	server server03 192.168.185.34:6443 check check-ssl verify none

# Special health check listener for integration with external load
# balancers.
listen local_health_check

	# Listen on port 60000
	bind :60000

	# This is a health check
	mode health

	# Enable HTTP-style responses: "HTTP/1.0 200 OK"
	# else just print "OK".
	option httpchk
